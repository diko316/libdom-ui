{"version":3,"file":"libdom-ui.es.js","sources":["../src/lib/packager.js"],"sourcesContent":["'use strict';\n\nimport {\n            string,\n            array\n        } from \"libcore\";\n\nconst INVALID_NAME = \"Invalid Package [name] parameter.\",  \n    INVALID_NAMES = \"Invalid [names] Package collection parameter.\";\n\n\nclass Package {\n    constructor(name) {\n        this.id = ':' + name;\n        this.name = name;\n        \n        this.registered = false;\n        this.requires = [];\n\n    }\n}\n\n\nexport default\n    class Packager {\n        constructor() {\n            this.names = [];\n            this.packages = {};\n        }\n\n        register(name, dependencies) {\n\n            var isString = string,\n                names = this.names,\n                list = this.packages,\n                PackageClass = Package;\n            var c, l, dependency, items, il, id, packageObject;\n            \n            if (!isString(name)) {\n                throw new Error(INVALID_NAME);\n            }\n\n            id = ':' + name;\n\n            if (id in list && list[id].registered) {\n                throw new Error(`Package ${name} already exists.`);\n            }\n\n            names[names.length] = name;\n\n            packageObject = new PackageClass(name);\n            \n            list[id] = packageObject;\n            packageObject.registered = true;\n            \n\n            if (isString(dependencies)) {\n                dependencies = [dependencies];\n            }\n\n            if (array(dependencies)) {\n                items = packageObject.requires;\n                il = 0;\n\n                for (c = -1, l = dependencies.length; l--;) {\n                    dependency = dependencies[++c];\n                    if (isString(dependency)) {\n                        items[il++] = dependency;\n                    }\n\n                }\n\n            }\n\n            return this;\n\n        }\n\n        flatten(names) {\n            var list = this.packages,\n                isString = string;\n            var position, len, name, id, inserted, stack, total,\n                pack, requires, resolved, rl, recursed;\n            var maxcall = 50;\n\n            var rid = 0;\n\n            if (isString(names)) {\n                names = [names];\n            }\n\n            if (array(names)) {\n                total = names.length;\n\n                // validate names\n                for (len = total; len--;) {\n                    name = names[len];\n\n                    if (!isString(name)) {\n                        throw new Error(INVALID_NAMES);\n                    }\n\n                    id = ':' + name;\n                    if (!(id in list)) {\n                        throw new Error(`Package ${name} do not exist.`);\n                    }\n                    else if (!list[id].registered) {\n                        throw new Error(`Package ${name} is not registered.`);\n                    }\n\n                }\n                \n                recursed = {};\n                inserted = {};\n                stack = null;\n                position = -1;\n                len = total;\n                resolved = [];\n                rl = 0;\n\n\n                for (; len--;) {\n                    if (!--maxcall) {\n                        break;\n                    }\n                    name = names[++position];\n                    id = ':' + name;\n                    pack = list[id];\n\n                    requires = pack.requires;\n                    total = requires.length;\n                    \n                    if (!(id in recursed)) {\n                        if (total) {\n                            recursed[id] = true;\n                            stack = {\n                                rid: ++rid,\n                                parent: stack,\n                                ender: name,\n                                c: position,\n                                l: len,\n                                items: names,\n                                rs: resolved\n                            };\n    \n                            names = requires;\n                            len = total;\n                            position = -1;\n                            resolved = [];\n                            rl = 0;\n                            \n                            continue;\n                        }\n                        // add leaf\n                        else if (!(id in inserted)) {\n                            resolved[rl++] =\n                                inserted[id] = name;\n                        }\n                    }\n\n                    // end?\n                    if (!len) {\n                        // pop\n                        for (; stack; ) {\n                            // pop!\n                            len = stack.l;\n                            name = stack.ender;\n                            position = stack.c;\n                            names = stack.rs;\n                            names.push.apply(names, resolved);\n                            resolved = names;\n                            names = stack.items;\n                            rl = resolved.length;\n\n                            stack = stack.parent;\n                            \n\n                            // included ender\n                            id = ':' + name;\n                            if (!(id in inserted)) {\n                                resolved[rl++] = \n                                    inserted[id] = name;\n                            }\n\n                            if (len) {\n                                break;\n                            }\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n            return resolved;\n\n        }\n    }"],"names":["const"],"mappings":"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"}